name: Build Microservice Demo App

on:
  push:
    branches:
      - main
env:
  DOTNET_VERSION: '5.0'
  NODE_VERSION: '14.x'
  API_PATH: './NetCoreMicroserviceSample/NetCoreMicroserviceSample.Api'
  UI_PATH: './NetCoreMicroserviceSample/NetCoreMicroserviceSample.UserInterface'
  CONFIG: 'Debug'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup DotNet 3.1 Environment (for Swashbuckle)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1'

    - name: Setup Node.js ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install dotnet tools'
      working-directory: ${{ env.API_PATH }}
      run: dotnet tool restore

    - name: 'Build API'
      working-directory: ${{ env.API_PATH }}
      run: dotnet build --configuration ${{ env.CONFIG }}

    - name: 'Generate Swagger file'
      working-directory: ${{ env.API_PATH }}
      run: dotnet swagger tofile --output obj/api.json bin/${{ env.CONFIG }}/net${{ env.DOTNET_VERSION }}/NetCoreMicroserviceSample.Api.dll v1

    - name: 'NPM Install'
      working-directory: ${{ env.UI_PATH }}
      run: npm install

    - name: 'Generate API client'
      working-directory: ${{ env.UI_PATH }}
      run: |
        npx autorest --input-file=../NetCoreMicroserviceSample.Api/obj/api.json --typescript --output-folder=../NetCoreMicroserviceSample.ApiClient --v3
        cp ../NetCoreMicroserviceSample.ApiClient/src/* src/apiClient/
        cp ../NetCoreMicroserviceSample.ApiClient/src/models/* src/apiClient/

    - name: 'Build UI'
      working-directory: ${{ env.UI_PATH }}
      run: npm run build-prod

    - name: 'Build API'
      working-directory: ${{ env.API_PATH }}
      run: dotnet publish --configuration Release -r win-x64 -p:PublishSingleFile=true --self-contained true --out out
  
    - uses: actions/upload-artifact@v2
      with:
        name: build-result
        path: ${{ env.API_PATH }}/out/*
    